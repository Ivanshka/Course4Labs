Суть лабы в привязках UI элементов к данным.
Что стоит поменять:
    Переименуйте Card в другой клас
    Измените немного UI, Хотя ей все равно, можете не менять

Вопросы при защите:
1) Поясните что такое
a LiveData - хранилище данных, работающее по принципу паттерна Observer (наблюдатель). Это хранилище умеет делать две вещи:

             1) В него можно поместить какой-либо объект

             2) На него можно подписаться и получать объекты, которые в него помещают.

b ViewModel - ViewModel - класс, позволяющий Activity и фрагментам сохранять необходимые им объекты живыми при повороте экрана.
c Dao - Data Access Object. Обьект через который, можно получить доступ к данным (репозиторий)
d Repository - (DAO new school)
e Room - (DB framework, что то вроде Entity Framework)
2) Что такое Lifecycle  и как он используется? - Вопрос встречался миллион раз, (Create, Start, Resume, Pause, Stop, Destroy, смотреть 3 лабу)
3) Какие  основные  свойства  LiveData? Как  добавить  и  получить
данные? (LiveData.setValue()/LiveData.getValue())
4) Как создать ViewModel? Как связать ее с Activity или Fragment? ViewModelProviders.of(__Activity__).get(__ViewModelClass__);
5) Как ViewModel связана с LiveData? Где их хранить? Смотри класс CardViewModel
6) Что такое Room, Dao, Entity? - Смотри вопрос 1. Entity - сущность, которая храниться в бд и по которой будет создана таблица
7) Что такое Data Binding? Расскажите как организовать привязку. - Вспоминай WPF и её биндинги, где изменения значения поля обьекта влечет
за собой изменения на UI
8) Как  организовать  механизмы  observable  objects,  observable  fields, - Через LiveData
 observable collection? Для чего они используются?
9) Как  организуется  архитектура  клиент-серверных  приложений - Найс вопросы
Android? Расскажите какие могут быть варианты. Андроид - клиент, сервер - обычный сервер, Не понимаю что надо здесь сказать